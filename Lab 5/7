#include <iostream>
#include <string>

using namespace std;

class Product {
private:
    int id;
    string name;
    int quantity;

public:
    Product(int id = 0, const string& name = "", int quantity = 0) 
        : id(id), name(name), quantity(quantity) {}

    int getId() const { return id; }
    string getName() const { return name; }
    int getQuantity() const { return quantity; }

    void displayProduct() const {
        cout << "Product ID: " << id << endl;
        cout << "Product Name: " << name << endl;
        cout << "Quantity: " << quantity << endl;
    }
};

class Warehouse {
private:
    Product inventory[100]; // Array of products with a maximum size
    int productCount;

public:
    Warehouse() : productCount(0) {}

    void addProduct(int id, const string& name, int quantity) {
        if (productCount < 100) {  // Ensure we don't exceed the array size
            inventory[productCount] = Product(id, name, quantity);
            productCount++;
        } else {
            cout << "Inventory is full!" << endl;
        }
    }

    void sortProductsByName() {
        for (int i = 0; i < productCount - 1; i++) {
            for (int j = i + 1; j < productCount; j++) {
                if (inventory[i].getName() > inventory[j].getName()) {
                    Product temp = inventory[i];
                    inventory[i] = inventory[j];
                    inventory[j] = temp;
                }
            }
        }
    }

    Product* searchProductById(int id) {
        for (int i = 0; i < productCount; i++) {
            if (inventory[i].getId() == id) {
                return &inventory[i]; // Return the address of the found product
            }
        }
        return nullptr; // If not found, return null
    }

    void displayInventory() const {
        if (productCount == 0) {
            cout << "No products in the inventory!" << endl;
        } else {
            for (int i = 0; i < productCount; i++) {
                inventory[i].displayProduct();
                cout << "-------------------" << endl;
            }
        }
    }
};

int main() {
    Warehouse warehouse;

    warehouse.addProduct(1, "Laptop", 10);
    warehouse.addProduct(2, "Smartphone", 25);
    warehouse.addProduct(3, "Chair", 50);
    warehouse.addProduct(4, "Desk", 20);

    cout << "Initial Inventory:" << endl;
    warehouse.displayInventory();

    warehouse.sortProductsByName();
    cout << "Inventory Sorted by Product Name:" << endl;
    warehouse.displayInventory();

    int searchId;
    cout << "Enter product ID to search: ";
    cin >> searchId;

    Product* product = warehouse.searchProductById(searchId);
    if (product != nullptr) {
        cout << "Product found:" << endl;
        product->displayProduct();
    } else {
        cout << "Product with ID " << searchId << " not found!" << endl;
    }

    return 0;
}
